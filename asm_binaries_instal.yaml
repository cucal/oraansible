#  Pamplona 2019
#  Playbook which sends a respone file and  uses it to install  Oracle restart/ CRS  / Grid on alone server
#
# requires
#   env:                                     name of the server  which should be in the inventory
#   files/asm_install_[version].yaml  : configuration file with the variables 
---
- hosts: "{{env}}"
  remote_user: ansible
  become: yes
  become_user: root
  tasks:
  
  - name: Including data
    include_vars:
      file: "{{type}}_install_{{ version }}.yaml"
   
  - name: generate response file
    template:
     src: "templates/{{ response_file }}.j2"
     dest: "{{ stage_directory }}/{{response_file}}"
     mode: '0644'


  - name: Install Grid  19c Software
    shell: "{{ oracle_home }}/gridSetup.sh  -silent -responseFile {{ stage_directory }}/{{response_file}}"
    become: yes
    become_user: "{{ oracle_user }}"
    args:
     chdir: "{{ oracle_home }}"
    ignore_errors: True

  - name: execute rot.sh
    shell: "{{ oracle_home }}/root.sh"
    become: yes
    become_user: root
    args:
     chdir: "{{ oracle_home }}"

  - name: Configure CRS 
    shell: $GI_HOME/perl/bin/perl -I $GI_HOME/perl/lib -I $GI_HOME/crs/install $GI_HOME/crs/install/roothas.pl
    become: yes
    become_user: root
    args:
     chdir: "{{ oracle_home }}"
    environment:
      GI_HOME: "{{ oracle_home }}"
    ignore_errors: True

  - name: Create listener
    shell: "$GI_HOME/bin/srvctl add listener -listener LISTENER  -oraclehome  {{ oracle_home }}" 
    become: yes
    become_user: "{{oracle_user}}"
    args:
     chdir: "{{ oracle_home }}"
    environment:
      GI_HOME: "{{ oracle_home }}"
      ORACLE_BASE: "{{ oracle_base}}"
    ignore_errors: False

- name: Enable listener
    shell: $GI_HOME/bin/srvctl enable listener -listener LISTENER 
    become: yes
    become_user: "{{oracle_user}}"
    args:
     chdir: "{{ oracle_home }}"
    environment:
      GI_HOME: "{{ oracle_home }}"
      ORACLE_BASE: "{{ oracle_base}}"
    ignore_errors: True

- name: Start listener
    shell: $GI_HOME/bin/srvctl start listener -listener LISTENER 
    become: yes
    become_user: "{{oracle_user}}"
    args:
     chdir: "{{ oracle_home }}"
    environment:
      GI_HOME: "{{ oracle_home }}"
      ORACLE_BASE: "{{ oracle_base}}"
    ignore_errors: False

