#  Pamplona 2020
#  Playbook which sends a respone file and  uses it to install  Oracle restart/ CRS  / Grid on alone server
#  requires
#   env:                              name of the server  which should be in the inventory
#   version:                          version of database or asm
#   vars/oracle_standard.yaml        standard values for Oracle
#   vars/oracle_files.yaml:          Info with the asm binaries 
---
- hosts: "{{ env }}"
  vars:
    type: asm
  remote_user: ansible
  become: yes
  become_user: root
  tasks:
 # checking prerrequisites     
  - fail: msg="Error no server definied, please define the env and type variables in the job"
    when: env is not defined or version is not defined or type is not defined
# Loading env
  - name: Including Standard_values
    include_vars:
      file: "vars/oracle_standard.yaml"

  - name: Including binaries info
    include_vars:
     file: "vars/oracle_files.yaml"

 # retrieve the response file
  - set_fact:
      response_file: "{{item.response_file}}"
    with_items: "{{binaries}}"
    when:  item.version == "{{version}}"  and  item.type == "{{type}}"

 # retrieve the oracle_home
  - set_fact:
     oracle_home: "{{oracle_home_directory.asm}}"
    when: type == 'asm'
#
  - name: generate response file
    template:
     src: "templates/{{ response_file }}.j2"
     dest: "{{ stage_directory }}/{{response_file}}"
     mode: '0644'


  - name: Install Grid  19c Software
    shell: "{{ oracle_home }}/gridSetup.sh  -silent -waitforcompletion -ignorePrereq  -responseFile {{ stage_directory }}/{{response_file}}"
    become: yes
    become_user: "{{ oracle_user }}"
    args:
     chdir: "{{ oracle_home }}"
    environment:
      GI_HOME: "{{ oracle_home }}"
      ORACLE_HOME: "{{ oracle_home }}"
    ignore_errors: yes

  - name: execute root.sh
    shell: "{{ oracle_home }}/root.sh"
    become: yes
    become_user: root
    args:
     chdir: "{{ oracle_home }}"

  - name: Configure CRS 
    shell: $GI_HOME/perl/bin/perl -I $GI_HOME/perl/lib -I $GI_HOME/crs/install $GI_HOME/crs/install/roothas.pl
    become: yes
    become_user: root
    args:
     chdir: "{{ oracle_home }}"
    environment:
      GI_HOME: "{{ oracle_home }}"
      ORACLE_HOME: "{{ oracle_home }}"
    ignore_errors: yes

  - name: Create listener
    shell: "$GI_HOME/bin/srvctl add listener -listener LISTENER  -oraclehome  {{ oracle_home }}" 
    become: yes
    become_user: "{{oracle_user}}"
    args:
     chdir: "{{ oracle_home }}"
    environment:
      GI_HOME: "{{ oracle_home }}"
      ORACLE_BASE: "{{ oracle_base}}"
    ignore_errors: no

  - name: Enable listener
    shell: $GI_HOME/bin/srvctl enable listener -listener LISTENER 
    become: yes
    become_user: "{{oracle_user}}"
    args:
     chdir: "{{ oracle_home }}"
    environment:
      GI_HOME: "{{ oracle_home }}"
      ORACLE_BASE: "{{ oracle_base}}"
    ignore_errors: yes

  - name: Start listener
    shell: $GI_HOME/bin/srvctl start listener -listener LISTENER 
    become: yes
    become_user: "{{oracle_user}}"
    args:
     chdir: "{{ oracle_home }}"
    environment:
      GI_HOME: "{{ oracle_home }}"
      ORACLE_BASE: "{{ oracle_base}}"
    ignore_errors: no

